messages=FALSE,
warning=FALSE)
library(ggplot2)
library(tidyverse)
library(haven)
library(lubridate)
library(broom)
library(tidyr)
library(base)
library(glue)
library(bookdown)
library(tinytex)
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(echo = FALSE,
cache=FALSE,
messages=FALSE,
warning=FALSE)
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(echo = FALSE,
cache=FALSE,
messages=FALSE,
warning=FALSE)
library(ggplot2)
library(tidyverse)
library(haven)
library(lubridate)
library(broom)
library(tidyr)
library(base)
library(glue)
library(bookdown)
library(tinytex)
>>>>>>> peimin_lin
=======
data_cleaned %>% group_by(job_type) %>% count()
data_cleaned %>% group_by(job_type) %>% summarise("count" = n())
data_cleaned %>% group_by(job_type) %>% summarise(count = n())
data_cleaned %>% group_by(job_type) %>% summarise(`Number of jobs posted` = n()) %>% rename(`Job Type` = job_type)
data_cleaned %>% group_by(job_type) %>% summarise(`Number of jobs posted` = n()) %>% rename(`Job Type` = job_type) %>%
kable(caption = "Number of jobs posted by job type") %>%
kable_styling(bootstrap_options = c("hovered", "striped"))
data_cleaned %>% group_by(job_type) %>% count() %>%
ggplot(aes(x = n, y = job_type, fill = job_type)) +
geom_col() +
theme(legend.position = "bottom") +
labs(x = "Number of jobs posted", y = "Job Type")
?theme
data_cleaned %>% group_by(job_type) %>% count() %>%
ggplot(aes(x = n, y = job_type, fill = job_type)) +
geom_col() +
theme(legend.position = "bottom", legend.title = "Job Type") +
labs(x = "Number of jobs posted", y = "Job Type")
data_cleaned %>% group_by(job_type) %>% count() %>%
ggplot(aes(x = n, y = job_type, fill = job_type)) +
geom_col() +
theme(legend.position = "none") +
labs(x = "Number of jobs posted", y = "Job Type")
View(job_types)
View(data_cleaned)
View(job_type_counts)
data_cleaned %>% mutate(post_date = as.Date(post_date))
data_cleaned %>% mutate(post_date = as.Date(post_date)) %>% group_by(post_date, job_type) %>% summarise("Number of jobs posted" = n())
data_cleaned %>% mutate(post_date = as.Date(post_date)) %>% group_by(post_date, job_type) %>% summarise("Number of jobs posted" = n()) %>%
ggplot(aes(x = post_date, y =job_type)) +
geom_line() +
theme_classic() +
labs(x = "Number of jobs posted", y = "Job Type")
data_cleaned %>% mutate(post_date = as.Date(post_date)) %>% group_by(post_date, job_type) %>% summarise("Number of jobs posted" = n())
data_cleaned %>% mutate(post_date = as.Date(post_date)) %>% group_by(post_date, job_type) %>% summarise("Number of jobs posted" = n()) %>% mutate(`Number of jobs posted` = as.numeric(`Number of jobs posted`))
data_cleaned %>% mutate(post_date = as.Date(post_date)) %>% group_by(post_date, job_type) %>% summarise("Number of jobs posted" = n()) %>% mutate(`Number of jobs posted` = as.numeric(`Number of jobs posted`)) %>%
ggplot(aes(x = post_date, y =job_type)) +
geom_line() +
theme_classic() +
labs(x = "Number of jobs posted", y = "Job Type")
data_cleaned %>% mutate(post_date = as.Date(post_date)) %>% group_by(post_date, job_type) %>% summarise("Number of jobs posted" = n()) %>% mutate(`Number of jobs posted` = as.numeric(`Number of jobs posted`)) %>% ungroup() %>%
ggplot(aes(x = post_date, y =job_type)) +
geom_line() +
theme_classic() +
labs(x = "Number of jobs posted", y = "Job Type")
data_cleaned %>% mutate(post_date = as.Date(post_date)) %>% group_by(post_date, job_type) %>% summarise("Number of jobs posted" = n()) %>% ungroup() %>% mutate(`Number of jobs posted` = as.numeric(`Number of jobs posted`)) %>%
ggplot(aes(x = post_date, y =job_type)) +
geom_line() +
theme_classic() +
labs(x = "Number of jobs posted", y = "Job Type")
data_cleaned %>% mutate(post_date = as.Date(post_date)) %>% group_by(post_date, job_type) %>% summarise("Number of jobs posted" = n()) %>% mutate(`Number of jobs posted` = as.numeric(`Number of jobs posted`)) %>%
ggplot(aes(x = post_date, y = `Number of jobs posted`)) +
geom_line() +
theme_classic() +
labs(x = "Number of jobs posted", y = "Job Type")
data_cleaned %>% mutate(post_date = as.Date(post_date)) %>% group_by(post_date, job_type) %>% summarise("Number of jobs posted" = n()) %>% mutate(`Number of jobs posted` = as.numeric(`Number of jobs posted`)) %>%
ggplot(aes(x = post_date, y = `Number of jobs posted`)) +
geom_line(aes(fill = job_type)) +
theme_classic() +
labs(x = "Number of jobs posted", y = "Job Type")
data_cleaned %>% mutate(post_date = as.Date(post_date)) %>% group_by(post_date, job_type) %>% summarise("Number of jobs posted" = n()) %>% ungroup() %>% mutate(`Number of jobs posted` = as.numeric(`Number of jobs posted`)) %>%
ggplot(aes(x = post_date, y = `Number of jobs posted`)) +
geom_line(aes(fill = job_type)) +
theme_classic() +
labs(x = "Number of jobs posted", y = "Job Type")
data_cleaned %>% mutate(post_date = as.Date(post_date)) %>% group_by(post_date, job_type) %>% summarise("Number of jobs posted" = n()) %>% ungroup() %>% mutate(`Number of jobs posted` = as.numeric(`Number of jobs posted`)) %>%
ggplot(aes(x = post_date, y = `Number of jobs posted`)) +
geom_line(aes(color = job_type)) +
theme_classic() +
labs(x = "Number of jobs posted", y = "Job Type")
data_cleaned %>% mutate(post_date = as.Date(post_date)) %>% group_by(post_date, job_type) %>% summarise("Number of jobs posted" = n()) %>%
ggplot(aes(x = post_date, y = `Number of jobs posted`)) +
geom_line(aes(color = job_type)) +
theme_classic() +
labs(x = "Number of jobs posted", y = "Job Type")
data_cleaned %>% mutate(post_date = as.Date(post_date)) %>% group_by(post_date, job_type) %>% summarise("Number of jobs posted" = n()) %>% ungroup() %>%
ggplot(aes(x = post_date, y = `Number of jobs posted`)) +
geom_line(aes(color = job_type)) +
theme_classic() +
labs(x = "Number of jobs posted", y = "Job Type")
job_types <- data_cleaned %>% select(job_title, post_date, job_type) %>% mutate(post_date = as.Date(post_date))
job_type_counts <- job_types %>% group_by(Month, job_type) %>% count()
job_type_counts <- job_types %>% group_by(post_date, job_type) %>% count()
job_type_counts %>%
ggplot(aes(x = post_date, y = n)) +
geom_line(aes(color= job_type)) +
labs(y = "Number of jobs posted", x = "Month")
job_types <- data_cleaned %>% select(job_title, post_date, job_type) %>%
mutate(post_date = as.Date(post_date),
Month = month(post_date, label = TRUE, abbr = FALSE))
job_types <- data_cleaned %>% select(job_title, post_date, job_type) %>%
mutate(post_date = as.Date(post_date))
job_type_counts <- job_types %>% mutate(Month = month(post_date),
job_type = as.character(job_type)) %>%
group_by(Month, job_type) %>% count()
job_type_counts %>%
ggplot(aes(x = Month, y = n)) +
geom_point(aes(color = job_type)) +
geom_line(aes(color= job_type)) +
labs(y = "Number of jobs posted", x = "Month")
job_type_counts %>% mutate(Month= case_when())
job_type_counts <- job_types %>% mutate(Month = month(post_date),
Month = as.character(Month),
job_type = as.character(job_type)) %>%
group_by(Month, job_type) %>% count()
job_type_counts <- job_types %>% mutate(Month = month(post_date),
job_type = as.character(job_type)) %>%
group_by(Month, job_type) %>% count()
job_type_counts <- job_types %>% mutate(Month = month(post_date, label = TRUE, abbr = FALSE),
job_type = as.character(job_type)) %>%
group_by(Month, job_type) %>% count()
job_type_counts %>%
ggplot(aes(x = Month, y = n)) +
geom_point(aes(color = job_type)) +
geom_line(aes(color= job_type)) +
labs(y = "Number of jobs posted", x = "Month")
job_type_counts <- job_types %>% mutate(Month = month(post_date, label = TRUE, abbr = FALSE),
Month = as.character(Month)
job_type = as.character(job_type)) %>%
job_type_counts <- job_types %>% mutate(Month = month(post_date, label = TRUE, abbr = FALSE),
Month = as.character(Month),
job_type = as.character(job_type)) %>%
group_by(Month, job_type) %>% count()
job_type_counts %>%
ggplot(aes(x = Month, y = n)) +
geom_point(aes(color = job_type)) +
geom_line(aes(color= job_type)) +
labs(y = "Number of jobs posted", x = "Month")
job_type_counts <- job_types %>% mutate(Month = month(post_date, label = TRUE, abbr = FALSE),
Month = as.character(Month),
job_type = as.character(job_type)) %>%
factor(job_type_counts$Month, levels = c("April", "May", "June", "July", "August", "September", "October", "November")) %>%
group_by(Month, job_type) %>% count()
job_type_counts <- job_types %>% mutate(Month = month(post_date, label = TRUE, abbr = FALSE),
job_type = as.character(job_type)) %>%
factor(job_type_counts$Month, levels = c("April", "May", "June", "July", "August", "September", "October", "November")) %>%
group_by(Month, job_type) %>% count()
job_type_counts <- job_types %>% mutate(Month = month(post_date, label = TRUE, abbr = FALSE),
job_type = as.character(job_type)) %>%
group_by(Month, job_type) %>% count()
job_type_counts %>%
ggplot(aes(x = Month, y = n)) +
geom_point(aes(color = job_type)) +
geom_line(aes(color= job_type)) +
labs(y = "Number of jobs posted", x = "Month")
job_type_counts <- job_types %>% mutate(Month = month(post_date, label = TRUE, abbr = FALSE),
Month = as.factor(Month),
job_type = as.character(job_type)) %>%
group_by(Month, job_type) %>% count()
View(job_type_counts)
job_type_counts %>%
ggplot(aes(x = Month, y = n)) +
geom_point(aes(color = job_type)) +
geom_line(aes(color= job_type)) +
labs(y = "Number of jobs posted", x = "Month")
job_type_counts <- job_types %>% mutate(Month = month(post_date, label = TRUE, abbr = FALSE),
job_type = as.character(job_type)) %>%
group_by(Month, job_type) %>% count()
job_type_counts %>%
ggplot(aes(x = Month, y = n)) +
geom_point(aes(color = job_type)) +
geom_line(aes(color= job_type)) +
labs(y = "Number of jobs posted", x = "Month")
job_type_counts <- job_types %>% mutate(Month = month(post_date),
job_type = as.character(job_type)) %>%
group_by(Month, job_type) %>% count()
job_type_counts %>%
ggplot(aes(x = Month, y = n)) +
geom_point(aes(color = job_type)) +
geom_line(aes(color= job_type)) +
labs(y = "Number of jobs posted", x = "Month")
job_type_counts <- job_types %>% mutate(Month = months(post_date),
job_type = as.character(job_type)) %>%
group_by(Month, job_type) %>% count()
job_type_counts <- job_types %>% mutate(job_type = as.character(job_type),
Month = months(post_date)) %>%
factor(Month, levels=month.name) %>%
group_by(Month, job_type) %>%
count()
job_type_counts <- job_types %>% mutate(job_type = as.character(job_type),
Month = months(post_date)) %>%
group_by(Month, job_type) %>%
count()
job_type_counts %>%
ggplot(aes(x = Month, y = n)) +
geom_point(aes(color = job_type)) +
geom_line(aes(color= job_type)) +
labs(y = "Number of jobs posted", x = "Month")
job_type_counts <- job_types %>% mutate(Month = month(post_date),
job_type = as.character(job_type)) %>%
group_by(Month, job_type) %>% count()
job_type_counts %>%
ggplot(aes(x = Month, y = n)) +
geom_point(aes(color = job_type)) +
geom_line(aes(color= job_type)) +
labs(y = "Number of jobs posted", x = "Month")
job_type_month<-months(job_types)
job_type_month<-months(post_date)
job_type_counts <- job_types %>% mutate(Month = month(post_date),
job_type = as.character(job_type)) %>%
group_by(Month, job_type) %>% summarise("Number of jobs posted" = n())
job_type_counts %>%
ggplot(aes(x = Month, y = `Number of jobs posted`)) +
geom_point(aes(color = job_type)) +
geom_line(aes(color= job_type))
job_type_counts[1,1] = "April"
job_type_counts$Month <- as.character(job_type_counts$Month)
job_type_counts[1,1] = "April"
job_type_counts[1,1] = "April"
job_type_counts[1,1] = "April"
job_type_counts[2,1] = "April"
job_type_counts[3,1] = "April"
job_type_counts[4,1] = "April"
job_type_counts[5,1] = "May"
job_type_counts[6,1] = "May"
job_type_counts[7,1] = "May"
job_type_counts[8,1] = "May"
job_type_counts[9,1] = "June"
job_type_counts[10,1] = "June"
job_type_counts[11,1] = "June"
job_type_counts[12,1] = "June"
job_type_counts[13,1] = "July"
job_type_counts[14,1] = "July"
job_type_counts[15,1] = "July"
job_type_counts[16,1] = "July"
job_type_counts[17,1] = "August"
job_type_counts[18,1] = "August"
job_type_counts[19,1] = "August"
job_type_counts[20,1] = "August"
job_type_counts[21,1] = "September"
job_type_counts[22,1] = "September"
job_type_counts[23,1] = "September"
job_type_counts[24,1] = "September"
job_type_counts[25,1] = "October"
job_type_counts[26,1] = "October"
job_type_counts[27,1] = "October"
job_type_counts[28,1] = "October"
job_type_counts[29,1] = "November"
job_type_counts[30,1] = "November"
job_type_counts[31,1] = "November"
job_type_counts[32,1] = "November"
job_type_counts$Month <- factor(job_type_counts$Month,
levels = c("April", "May", "June", "July", "August", "September", "October", "November"))
ggplot(job_type_counts, aes(x = Month, y = `Number of jobs posted`)) +
geom_point(aes(color = job_type)) +
geom_line(aes(color= job_type))
job_type_counts <- job_types %>% mutate(Month = month(post_date),
job_type = as.character(job_type)) %>%
group_by(Month, job_type) %>% summarise("Number of jobs posted" = n())
ggplot(job_type_counts, aes(x = Month, y = `Number of jobs posted`)) +
geom_point(aes(color = job_type)) +
geom_line(aes(color= job_type))
citations("glue")
citation("glue")
citation("bookdown")
>>>>>>> Justin_Thomas
knitr::opts_chunk$set(echo = FALSE,
cache=TRUE,
message = FALSE,
warning=FALSE)
before <- as.data.frame(head(raw_data, n = 5))
before %>%
kable(caption = "Extract of pre-cleaning data set") %>%
kable_styling(bootstrap_options = "hover")
library(ggplot2)
library(tidyverse)
library(haven)
library(lubridate)
library(broom)
library(tidyr)
library(base)
library(glue)
library(naniar) # For missing values
library(polite)
library(rvest)
library(xml2)
library(readr)
library(forcats)
library(kableExtra)
before %>%
kable(caption = "Extract of pre-cleaning data set") %>%
kable_styling(bootstrap_options = "hover")
before <- as.data.frame(head(raw_data, n = 5))
before %>%
kable(caption = "Extract of pre-cleaning data set") %>%
kable_styling(bootstrap_options = "hover")
?decode
??decode
before <- raw_data %>% head(5)
before <- as.data.frame(before)
before %>%
kable(caption = "Extract of pre-cleaning data set") %>%
kable_styling(bootstrap_options = "hover")
before <- raw_data %>% head(5)
before <- as.data.frame(before)
before %>%
kable(caption = "Extract of pre-cleaning data set") %>%
kable_styling(bootstrap_options = "hover")
kable(before, caption = "Extract of pre-cleaning data set") %>%
kable_styling(bootstrap_options = "hover")
before <- raw_data %>% head(5)
before <- as.data.frame(before)
kable(before, caption = "Extract of pre-cleaning data set") %>%
kable_styling(bootstrap_options = "hover")
kable(before, caption = "Extract of pre-cleaning data set",
"latex", booktabs = TRUE ) %>%
kable_styling(bootstrap_options = "hover")
kable(before, caption = "Extract of pre-cleaning data set",
"latex", booktabs = TRUE ) %>%
kable_styling(bootstrap_options = "stripped")
kable(before, caption = "Extract of pre-cleaning data set",
"latex", booktabs = TRUE )
library(knitr)
kable(before, caption = "Extract of pre-cleaning data set",
"latex", booktabs = TRUE ) %>%
kable_styling(bootstrap_options = "stripped")
?decode
??decode
stri_enc_isutf8(raw_data)
stringi::stri_enc_isutf8(raw_data)
kable(before, caption = "Extract of pre-cleaning data set",
"latex", booktabs = TRUE ) %>%
kable_styling(latex_options = c("stripped", "scale_down"))
?iconv
before <- iconv(before, to="UTF-8")
kable(before, caption = "Extract of pre-cleaning data set",
"latex", booktabs = TRUE ) %>%
kable_styling(latex_options = c("stripped", "scale_down"))
before <- iconv(raw_data, to="UTF-8")
before %>%
head(n = 5) %>%
kable(before, caption = "Extract of pre-cleaning data set",
"latex", booktabs = TRUE ) %>%
kable_styling(latex_options = c("stripped", "scale_down"))
before <- iconv(raw_data, to="UTF-8")
before %>%
head(n = 5)
raw_data <- read.csv(here::here("data", "seek_australia_sample.csv"))
before <- iconv(raw_data, to="UTF-8")
raw_data <- read.csv(here::here("data", "seek_australia_sample.csv"))
before <- iconv(raw_data$job_description, to="UTF-8")
before %>%
head(n = 5) %>%
kable(before, caption = "Extract of pre-cleaning data set",
"latex", booktabs = TRUE ) %>%
kable_styling(latex_options = c("stripped", "scale_down"))
raw_data <- read.csv(here::here("data", "seek_australia_sample.csv"))
raw_data %>%
head(n = 5) %>%
kable(caption = "Extract of pre-cleaning data set",
"latex", booktabs = TRUE ) %>%
kable_styling(latex_options = c("stripped", "scale_down"))
raw_data %>%
head(n = 5) %>%
kable(caption = "Extract of pre-cleaning data set",
"latex") %>%
kable_styling(latex_options = c("stripped", "scale_down"))
raw_data %>%
head(n = 5) %>%
kable(caption = "Extract of pre-cleaning data set") %>%
kable_styling(latex_options = c("stripped", "scale_down"))
raw_data %>%
slice() %>%
kable(caption = "Extract of pre-cleaning data set") %>%
kable_styling(latex_options = c("stripped", "scale_down"))
View(raw_data)
knitr::opts_chunk$set(echo = FALSE,
cache=TRUE,
message = FALSE,
warning=FALSE)
raw_data %>%
select((3:9), 11) %>%
slice() %>%
kable(caption = "Extract of pre-cleaning data set") %>%
kable_styling(latex_options = c("stripped", "scale_down"))
library(ggplot2)
library(tidyverse)
library(haven)
library(lubridate)
library(broom)
library(tidyr)
library(base)
library(glue)
library(naniar) # For missing values
library(polite)
library(rvest)
library(xml2)
library(readr)
library(forcats)
library(kableExtra)
raw_data %>%
select((3:9), 11) %>%
slice() %>%
kable(caption = "Extract of pre-cleaning data set") %>%
kable_styling(latex_options = c("stripped", "scale_down"))
raw_data %>%
select((3:7), 9, 11) %>%
slice() %>%
kable(caption = "Extract of pre-cleaning data set") %>%
kable_styling(latex_options = c("stripped", "scale_down"))
raw_data %>%
head() %>%
kable(caption = "Extract of pre-cleaning data set") %>%
kable_styling(latex_options = c("stripped", "scale_down"))
raw_data %>%
head(n = 5) %>%
as.data.frame() %>%
kable(caption = "Extract of pre-cleaning data set") %>%
kable_styling(latex_options = c("stripped", "scale_down"))
before <- raw_data %>%
head(n = 5) %>%
as.data.frame()
View(before)
before %>%
kable(caption = "Extract of pre-cleaning data set") %>%
kable_styling(latex_options = c("stripped", "scale_down"))
before %>%
kable(caption = "Extract of pre-cleaning data set") %>%
kable_styling(latex_options = c("stripped", "scale_down", "latex"))
before %>%
kable(caption = "Extract of pre-cleaning data set", "latex") %>%
kable_styling(latex_options = c("stripped", "scale_down"))
devtools::install_github('rstudio/rmarkdown')
devtools::install_github('rmarkdown')
install.packages("devtools")
head(raw_date, n = 5)
head(raw_data, n = 5)
before <- raw_data %>%
slice(n = 5)
before %>%
kable(caption = "Extract of pre-cleaning data set", "latex") %>%
kable_styling(latex_options = c("stripped", "scale_down"))
before <- raw_data %>%
slice()
before %>%
kable(caption = "Extract of pre-cleaning data set", "latex") %>%
kable_styling(latex_options = c("stripped", "scale_down"))
?invalid_UTF8
??invalid_UTF8
View(raw_data)
install.packages("xfun")
install.packages("xfun")
library(xfun)
library(xfun)
? invalid_utf8()
?invalid_utf8()
?invalid_utf8
??invalid_utf8
utf8::utf8_encode(raw_data)
stringi::stri_enc_isutf8(raw_data$job_description)
rlang::as_utf8_character(raw_data$job_description)
View(raw_data)
as.factor(raw_data$job_description)
xfun::read_utf8(raw_data)
knitr::opts_chunk$set(echo = FALSE,
cache = TRUE,
message = FALSE,
warning = FALSE)
utf8::as_utf8(raw_data$job_description, normalize = FALSE)
raw_data %>%
as_character(job_description)
?as.character()
raw_data %>%
as.character(job_description)
as.character(raw_data$job_description)
utf8::as_utf8(raw_data$job_description, normalize = FALSE)
as.character(raw_data$job_description) %>%
utf8::as_utf8(raw_data$job_description, normalize = FALSE)
as.character(raw_data$job_description) %>%
utf8::as_utf(normalize = FALSE)
as.character(raw_data$job_description) %>%
xfun::invalid_utf8()
View(raw_data)
View(by_city_cleaned)
# Select only the columns needed
by_city_cleaned <- by_city_cleaned %>%
select(- c(lat, lng, country, iso2, capital, population, population_proper))
head(by_city_cleaned)
