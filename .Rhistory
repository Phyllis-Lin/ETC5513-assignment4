<<<<<<< HEAD
separate (post_date, into = c("post_date", "tz"), sep = "T")
# convert the post_date column from character to date format
data_cleaned %>%
mutate_at(vars(post_date), as.Date, format = "%Y-%m-%d")
# Import the list of cities and states in Australia for joining
# List is not exhaustive
states <- read.csv(here::here("data","au.csv"))
=======
knitr::opts_chunk$set(echo = FALSE,
cache=TRUE,
messages=FALSE,
warning=FALSE)
>>>>>>> peimin_lin
library(ggplot2)
library(tidyverse)
library(haven)
library(lubridate)
library(broom)
library(tidyr)
library(base)
library(glue)
<<<<<<< HEAD
library(naniar) # For missing values
raw_data <- read.csv(here::here("data", "seek_australia_sample.csv"))
knitr::opts_chunk$set(echo = FALSE,
cache=TRUE,
messages=FALSE,
warning=FALSE)
by_city_cleaned %>%
filter (!state %in% c("New South Wales",
"Queensland",
"Victoria",
"Western Australia")) %>%
group_by(post_date, state) %>%
summarise("count" = n()) %>%
ungroup() %>%
ggplot(aes(x = post_date,
y = count)) +
geom_line(color = "#FF0000") +
facet_wrap(~ state, scales = "fixed") +
theme(axis.text.x = element_text(angle = 60, vjust = 0.3)) +
theme_bw() +
labs(title = "Count of jobs posted by days",
x = "Date",
y = "Number of jobs")
by_city_cleaned %>%
filter (!state %in% c("New South Wales",
"Queensland",
"Victoria",
"Western Australia")) %>%
group_by(post_date, state) %>%
summarise("count" = n()) %>%
ungroup() %>%
ggplot(aes(x = post_date,
y = count)) +
geom_line(color = "#00008B") +
facet_wrap(~ state, scales = "fixed") +
theme(axis.text.x = element_text(angle = 60, vjust = 0.3)) +
theme_bw() +
labs(title = "Count of jobs posted by days",
x = "Date",
y = "Number of jobs")
=======
raw_data <- read.csv(here::here("data", "seek_australia_sample.csv"))
# choose the needed columns only
data_cleaned <- raw_data %>%
select(3:9)
# separate the post-date column to get the date out
data_cleaned <- data_cleaned %>%
separate (post_date, into = c("post_date", "tz"), sep = "T")
# convert the post_date column from character to date format
data_cleaned %>%
mutate_at(vars(post_date), as.Date, format = "%Y-%m-%d")
library(kableExtra)
jobcategory <- data_cleaned  %>% dplyr::select(post_date,
category) %>%
separate(post_date, c("Year","Month","day"))%>%
select(-"Year", -"day")
distribution <- jobcategory  %>%
count(Month,category,sort = TRUE, name = "number")%>%
arrange(Month) %>%
ggplot(aes(x = Month, y = number)) +
geom_col(position = "dodge") +
facet_wrap(~category, ncol = 5)+
theme_bw(base_size = 6.5)+
theme(axis.text.x = element_text(angle = 50, vjust = 1)) +
ggtitle("Monthly job category distribution")
distribution
monthly <- jobcategory  %>%
count(category,Month,sort = TRUE, name = "number") %>%
arrange(Month) %>%
group_by(Month) %>%
top_n(5) %>%
ggplot() +
geom_point(mapping = aes(x = Month, y = number, color = category)) +
theme_bw(base_size = 11.5)+
theme(axis.text.x = element_text(angle = 50, vjust = 1))
monthly
canum <- jobcategory %>%
count(category,sort = TRUE, name = "number")%>%
arrange(number)
kableExtra::kable(canum, caption = " The number of jobs per category  ") %>%
kable_styling(bootstrap_options = c("striped", "hover"))
>>>>>>> peimin_lin
knitr::opts_chunk$set(echo = FALSE,
cache=TRUE,
messages=FALSE,
warning=FALSE)
library(ggplot2)
library(tidyverse)
library(haven)
library(lubridate)
library(broom)
library(tidyr)
library(base)
library(glue)
<<<<<<< HEAD
library(naniar) # For missing values
raw_data <- read.csv(here::here("data", "seek_australia_sample.csv"))
#choose the needed columns only
data_cleaned <- raw_data %>%
select(3:9,11)
=======
raw_data <- read.csv(here::here("data", "seek_australia_sample.csv"))
# choose the needed columns only
data_cleaned <- raw_data %>%
select(3:9)
>>>>>>> peimin_lin
# separate the post-date column to get the date out
data_cleaned <- data_cleaned %>%
separate (post_date, into = c("post_date", "tz"), sep = "T")
# convert the post_date column from character to date format
data_cleaned %>%
mutate_at(vars(post_date), as.Date, format = "%Y-%m-%d")
<<<<<<< HEAD
# Import the list of cities and states in Australia for joining
# List is not exhaustive
states <- read.csv(here::here("data","au.csv"))
# Clean and update state names
by_city <- data_cleaned %>%
filter(geo == "AU") %>%
separate_rows(city, sep = " & ") %>%
separate_rows(city, sep = ", ") %>%
separate_rows(city, sep = " and ")
# Specify state name for each city
by_city <- by_city %>%
left_join(states, by = "city") %>%
rename("state" = admin)
# check the missing
vis_miss(by_city)
# Manually adjust missing state
by_city_cleaned <- by_city %>%
mutate(
state = case_when(
str_detect(city, "TAS") ~ "Tasmania",
str_detect(city, "VIC") ~ "Victoria",
str_detect(city, "NSW") ~ "New South Wales",
str_detect(city, "ACT") ~ "Australian Capital Territory",
str_detect(city, "QLD") ~ "Queensland",
str_detect(city, "SA") ~ "South Australia",
str_detect(city, "Wide Bay Burnett") ~ "Queensland",
str_detect(city, "Sunshine Coast") ~ "Queensland",
str_detect(city, "Great Ocean Road") ~ "Victoria",
str_detect(city, "Mackay") ~ "Queensland",
str_detect(city, "Coalfields") ~ "New South Wales",
str_detect(city, "Murray") ~ "Victoria",
str_detect(city, "Maitland") ~ "New South Wales",
str_detect(city, "Hunter") ~ "New South Wales",
str_detect(city, "Gosford") ~ "New South Wales",
str_detect(city, "Pilbara") ~ "Western Australia",
str_detect(city, "Central Highlands") ~ "Queensland",
str_detect(city, "Blue Mountains") ~ "New South Wales",
str_detect(city, "Northern Australia") ~ "Northern Territory",
str_detect(city, "Illawarra") ~ "New South Wales",
str_detect(city, "South Coast") ~ "New South Wales",
str_detect(city, "Southern Tablelands") ~ "New South Wales",
str_detect(city, "Far North") ~ "Queensland",
str_detect(city, "Hawkesbury") ~ "New South Wales",
str_detect(city, "Darling Downs") ~ "Queensland",
str_detect(city, "Kimberley") ~ "Western Australia",
str_detect(city, "Peel") ~ "Western Australia",
str_detect(city, "La Trobe Valley") ~ "Victoria",
str_detect(city, "Somerset") ~ "Queensland",
str_detect(city, "Lockyer") ~ "Western Australia",
str_detect(city, "Goldfields") ~ "Western Australia",
str_detect(city, "Macedon Ranges") ~ "Victoria",
str_detect(city, "Mt Gambier") ~ "South Australia",
str_detect(city, "Limestone Coast") ~ "South Australia",
str_detect(city, "Wheatbelt") ~ "Western Australia",
str_detect(city, "Riverina") ~ "New South Wales",
str_detect(city, "Capricorn Coast") ~ "Queensland",
str_detect(city, "Gascoyne") ~ "Western Australia",
str_detect(city, "Mornington Peninsula") ~ "Victoria",
str_detect(city, "Bass Coast") ~ "Victoria",
str_detect(city, "Lismore") ~ "New South Wales",
str_detect(city, "Far North Coast") ~ "New South Wales",
str_detect(city, "Goulburn Valley") ~ "Victoria",
str_detect(city, "Yarra Valley") ~ "Victoria",
str_detect(city, "High Country") ~ "Victoria",
str_detect(city, "Eyre Peninsula") ~ "South Australia",
str_detect(city, "Bairnsdale") ~ "Victoria",
str_detect(city, "Gippsland") ~ "Victoria",
str_detect(city, "Mt Isa") ~ "Queensland",
str_detect(city, "North Coast") ~ "New South Wales",
str_detect(city, "Albury Wodonga") ~ "New South Wales",
str_detect(city, "Yorke Peninsula") ~ "South Australia",
str_detect(city, "Clare Valley") ~ "South Australia",
str_detect(city, "Fraser Coast") ~ "Queensland",
str_detect(city, "Great Southern") ~ "Western Australia",
str_detect(city, "Tamworth") ~ "New South Wales",
str_detect(city, "Southern Highlands") ~ "New South Wales",
str_detect(city, "Tablelands") ~ "Queensland",
str_detect(city, "Snowy") ~ "New South Wales",
str_detect(city, "Monaro") ~ "New South Wales",
str_detect(city, "West Gippsland") ~ "Victoria",
str_detect(city, "Latrobe Valley") ~ "Victoria",
str_detect(city, "Adelaide Hills") ~ "South Australia",
str_detect(city, "Barossa") ~ "South Australia",
str_detect(city, "Albury Area") ~ "New South Wales",
str_detect(city, "Grampians") ~ "Victoria",
str_detect(city, "Riverland") ~ "South Australia",
str_detect(city, "Murray Mallee") ~ "Victoria",
str_detect(city, "Fleurieu Peninsula") ~ "South Australia",
str_detect(city, "Kangaroo Island") ~ "South Australia",
str_detect(city, "Coober Pedy") ~ "South Australia",
str_detect(city, "Central West") ~ "New South Wales",
str_detect(city, "South West") ~ "South Australia",
str_detect(city, "North East") ~ "Tasmania",
str_detect(city, "North West") ~ "Tasmania",
str_detect(city, "Central Australia") ~ "Northern Territory",
str_detect(city, "Midwest") ~ "Western Australia",
str_detect(city, "Far West") ~ "New South Wales",
str_detect(city, "South East") ~ "Tasmania",
str_detect(city, "North East") ~ "Tasmania",
str_detect(city, "Central") ~ "Tasmania",
TRUE ~ as.character(state))
) %>%
filter(!city == "")
# Using the raw data to show missing values
miss_data <- by_city_cleaned %>%
# Replace blank values with NA
mutate_all(na_if,"")
vis_miss(miss_data)
gg_miss_upset(miss_data)
# Convert Date column from character to Date format for geom_line
by_city_cleaned <- by_city_cleaned %>%
mutate_at(vars(post_date), as.Date, format = "%Y-%m-%d")
by_city_cleaned %>%
group_by(post_date, state) %>%
summarise("count" = n()) %>%
ungroup() %>%
ggplot(aes(x = post_date,
y = count)) +
geom_line(color = "#00008B") +
facet_wrap(~ state, scales = "fixed") +
theme(axis.text.x = element_text(angle = 60, vjust = 0.3)) +
theme_bw() +
labs(title = "Count of jobs posted by days",
x = "Date",
y = "Number of jobs")
by_city_cleaned %>%
filter (!state %in% c("New South Wales",
"Queensland",
"Victoria",
"Western Australia")) %>%
group_by(post_date, state) %>%
summarise("count" = n()) %>%
ungroup() %>%
ggplot(aes(x = post_date,
y = count)) +
geom_line(color = "#00008B") +
facet_wrap(~ state, scales = "fixed") +
theme(axis.text.x = element_text(angle = 60, vjust = 0.3)) +
theme_bw() +
labs(title = "Count of jobs posted by days",
x = "Date",
y = "Number of jobs")
by_city_cleaned %>%
filter (!state %in% c("New South Wales",
"Queensland",
"Victoria",
"Western Australia")) %>%
group_by(post_date, state) %>%
summarise("count" = n()) %>%
ungroup() %>%
ggplot(aes(x = post_date,
y = count)) +
geom_line(color = "#FF000") +
facet_wrap(~ state, scales = "fixed") +
theme(axis.text.x = element_text(angle = 60, vjust = 0.3)) +
theme_bw() +
labs(title = "Count of jobs posted by days",
x = "Date",
y = "Number of jobs")
by_city_cleaned %>%
filter (!state %in% c("New South Wales",
"Queensland",
"Victoria",
"Western Australia")) %>%
group_by(post_date, state) %>%
summarise("count" = n()) %>%
ungroup() %>%
ggplot(aes(x = post_date,
y = count)) +
geom_line(color = "#FF0000") +
facet_wrap(~ state, scales = "fixed") +
theme(axis.text.x = element_text(angle = 60, vjust = 0.3)) +
theme_bw() +
labs(title = "Count of jobs posted by days",
x = "Date",
y = "Number of jobs")
git status
=======
library(kableExtra)
jobcategory <- data_cleaned  %>% dplyr::select(post_date,
category) %>%
separate(post_date, c("Year","Month","day"))%>%
select(-"Year", -"day")
canum <- jobcategory %>%
count(category,sort = TRUE, name = "number")%>%
arrange(number)
kableExtra::kable(canum, caption = " The number of jobs per category  ") %>%
kable_styling(bootstrap_options = c("striped", "hover"))
distribution <- jobcategory  %>%
count(Month,category,sort = TRUE, name = "number")%>%
arrange(Month) %>%
ggplot(aes(x = Month, y = number)) +
geom_col(position = "dodge") +
facet_wrap(~category, ncol = 5)+
theme_bw(base_size = 6.5)+
theme(axis.text.x = element_text(angle = 50, vjust = 1)) +
ggtitle("Monthly job category distribution")
distribution
monthly <- jobcategory  %>%
count(category,Month,sort = TRUE, name = "number") %>%
arrange(Month) %>%
group_by(Month) %>%
top_n(5) %>%
ggplot() +
geom_point(mapping = aes(x = Month, y = number, color = category)) +
theme_bw(base_size = 11.5)+
theme(axis.text.x = element_text(angle = 50, vjust = 1))
monthly
>>>>>>> peimin_lin
knitr::opts_chunk$set(echo = FALSE,
cache=TRUE,
messages=FALSE,
warning=FALSE)
library(ggplot2)
library(tidyverse)
library(haven)
library(lubridate)
library(broom)
library(tidyr)
library(base)
library(glue)
<<<<<<< HEAD
library(naniar) # For missing values
#choose the needed columns only
data_cleaned <- raw_data %>%
select(3:9,11)
=======
raw_data <- read.csv(here::here("data", "seek_australia_sample.csv"))
# choose the needed columns only
data_cleaned <- raw_data %>%
select(3:9)
>>>>>>> peimin_lin
# separate the post-date column to get the date out
data_cleaned <- data_cleaned %>%
separate (post_date, into = c("post_date", "tz"), sep = "T")
# convert the post_date column from character to date format
data_cleaned %>%
mutate_at(vars(post_date), as.Date, format = "%Y-%m-%d")
<<<<<<< HEAD
states <- read.csv(here::here("data","au.csv"))
# Clean and update state names
by_city <- data_cleaned %>%
filter(geo == "AU") %>%
separate_rows(city, sep = " & ") %>%
separate_rows(city, sep = ", ") %>%
separate_rows(city, sep = " and ")
# Specify names for each city
by_city <- by_city %>%
left_join(states, by = "city") %>%
rename("state" = admin)
# check the missing
vis_miss(by_city)
# Manually adjust missing state
by_city_cleaned <- by_city %>%
mutate(
state = case_when(
str_detect(city, "TAS") ~ "Tasmania",
str_detect(city, "VIC") ~ "Victoria",
str_detect(city, "NSW") ~ "New South Wales",
str_detect(city, "ACT") ~ "Australian Capital Territory",
str_detect(city, "QLD") ~ "Queensland",
str_detect(city, "SA") ~ "South Australia",
str_detect(city, "Wide Bay Burnett") ~ "Queensland",
str_detect(city, "Sunshine Coast") ~ "Queensland",
str_detect(city, "Great Ocean Road") ~ "Victoria",
str_detect(city, "Mackay") ~ "Queensland",
str_detect(city, "Coalfields") ~ "New South Wales",
str_detect(city, "Murray") ~ "Victoria",
str_detect(city, "Maitland") ~ "New South Wales",
str_detect(city, "Hunter") ~ "New South Wales",
str_detect(city, "Gosford") ~ "New South Wales",
str_detect(city, "Pilbara") ~ "Western Australia",
str_detect(city, "Central Highlands") ~ "Queensland",
str_detect(city, "Blue Mountains") ~ "New South Wales",
str_detect(city, "Northern Australia") ~ "Northern Territory",
str_detect(city, "Illawarra") ~ "New South Wales",
str_detect(city, "South Coast") ~ "New South Wales",
str_detect(city, "Southern Tablelands") ~ "New South Wales",
str_detect(city, "Far North") ~ "Queensland",
str_detect(city, "Hawkesbury") ~ "New South Wales",
str_detect(city, "Darling Downs") ~ "Queensland",
str_detect(city, "Kimberley") ~ "Western Australia",
str_detect(city, "Peel") ~ "Western Australia",
str_detect(city, "La Trobe Valley") ~ "Victoria",
str_detect(city, "Somerset") ~ "Queensland",
str_detect(city, "Lockyer") ~ "Western Australia",
str_detect(city, "Goldfields") ~ "Western Australia",
str_detect(city, "Macedon Ranges") ~ "Victoria",
str_detect(city, "Mt Gambier") ~ "South Australia",
str_detect(city, "Limestone Coast") ~ "South Australia",
str_detect(city, "Wheatbelt") ~ "Western Australia",
str_detect(city, "Riverina") ~ "New South Wales",
str_detect(city, "Capricorn Coast") ~ "Queensland",
str_detect(city, "Gascoyne") ~ "Western Australia",
str_detect(city, "Mornington Peninsula") ~ "Victoria",
str_detect(city, "Bass Coast") ~ "Victoria",
str_detect(city, "Lismore") ~ "New South Wales",
str_detect(city, "Far North Coast") ~ "New South Wales",
str_detect(city, "Goulburn Valley") ~ "Victoria",
str_detect(city, "Yarra Valley") ~ "Victoria",
str_detect(city, "High Country") ~ "Victoria",
str_detect(city, "Eyre Peninsula") ~ "South Australia",
str_detect(city, "Bairnsdale") ~ "Victoria",
str_detect(city, "Gippsland") ~ "Victoria",
str_detect(city, "Mt Isa") ~ "Queensland",
str_detect(city, "North Coast") ~ "New South Wales",
str_detect(city, "Albury Wodonga") ~ "New South Wales",
str_detect(city, "Yorke Peninsula") ~ "South Australia",
str_detect(city, "Clare Valley") ~ "South Australia",
str_detect(city, "Fraser Coast") ~ "Queensland",
str_detect(city, "Great Southern") ~ "Western Australia",
str_detect(city, "Tamworth") ~ "New South Wales",
str_detect(city, "Southern Highlands") ~ "New South Wales",
str_detect(city, "Tablelands") ~ "Queensland",
str_detect(city, "Snowy") ~ "New South Wales",
str_detect(city, "Monaro") ~ "New South Wales",
str_detect(city, "West Gippsland") ~ "Victoria",
str_detect(city, "Latrobe Valley") ~ "Victoria",
str_detect(city, "Adelaide Hills") ~ "South Australia",
str_detect(city, "Barossa") ~ "South Australia",
str_detect(city, "Albury Area") ~ "New South Wales",
str_detect(city, "Grampians") ~ "Victoria",
str_detect(city, "Riverland") ~ "South Australia",
str_detect(city, "Murray Mallee") ~ "Victoria",
str_detect(city, "Fleurieu Peninsula") ~ "South Australia",
str_detect(city, "Kangaroo Island") ~ "South Australia",
str_detect(city, "Coober Pedy") ~ "South Australia",
str_detect(city, "Central West") ~ "New South Wales",
str_detect(city, "South West") ~ "South Australia",
str_detect(city, "North East") ~ "Tasmania",
str_detect(city, "North West") ~ "Tasmania",
str_detect(city, "Central Australia") ~ "Northern Territory",
str_detect(city, "Midwest") ~ "Western Australia",
str_detect(city, "Far West") ~ "New South Wales",
str_detect(city, "South East") ~ "Tasmania",
str_detect(city, "North East") ~ "Tasmania",
str_detect(city, "Central") ~ "Tasmania",
TRUE ~ as.character(state))
) %>%
filter(!city == "")
raw_data <- read.csv(here::here("data", "seek_australia_sample.csv"))
#choose the needed columns only
data_cleaned <- raw_data %>%
select(3:9,11)
=======
jobcategory <- data_cleaned  %>% dplyr::select(post_date,
category) %>%
separate(post_date, c("Year","Month","day"))%>%
select(-"Year", -"day")
canum <- jobcategory %>%
count(category,sort = TRUE, name = "number")%>%
arrange(number)
kableExtra::kable(canum, caption = " The number of jobs per category  ") %>%
kable_styling(bootstrap_options = c("striped", "hover"))
distribution <- jobcategory  %>%
count(Month,category,sort = TRUE, name = "number")%>%
arrange(Month) %>%
ggplot(aes(x = Month, y = number)) +
geom_col(position = "dodge") +
facet_wrap(~category, ncol = 5)+
theme_bw(base_size = 6.5)+
theme(axis.text.x = element_text(angle = 50, vjust = 1)) +
ggtitle("Monthly job category distribution")
distribution
monthly <- jobcategory  %>%
count(category,Month,sort = TRUE, name = "number") %>%
arrange(Month) %>%
group_by(Month) %>%
top_n(5) %>%
ggplot() +
geom_point(mapping = aes(x = Month, y = number, color = category)) +
theme_bw(base_size = 11.5)+
theme(axis.text.x = element_text(angle = 50, vjust = 1))
monthly
knitr::opts_chunk$set(echo = FALSE,
cache=TRUE,
messages=FALSE,
warning=FALSE)
library(ggplot2)
library(tidyverse)
library(haven)
library(lubridate)
library(broom)
library(tidyr)
library(base)
library(glue)
raw_data <- read.csv(here::here("data", "seek_australia_sample.csv"))
# choose the needed columns only
data_cleaned <- raw_data %>%
select(3:9)
>>>>>>> peimin_lin
# separate the post-date column to get the date out
data_cleaned <- data_cleaned %>%
separate (post_date, into = c("post_date", "tz"), sep = "T")
# convert the post_date column from character to date format
data_cleaned %>%
mutate_at(vars(post_date), as.Date, format = "%Y-%m-%d")
<<<<<<< HEAD
states <- read.csv(here::here("data","au.csv"))
# Clean and update state names
by_city <- data_cleaned %>%
filter(geo == "AU") %>%
separate_rows(city, sep = " & ") %>%
separate_rows(city, sep = ", ") %>%
separate_rows(city, sep = " and ")
# Specify names for each city
by_city <- by_city %>%
left_join(states, by = "city") %>%
rename("state" = admin)
# check the missing
vis_miss(by_city)
# Manually adjust missing state
by_city_cleaned <- by_city %>%
mutate(
state = case_when(
str_detect(city, "TAS") ~ "Tasmania",
str_detect(city, "VIC") ~ "Victoria",
str_detect(city, "NSW") ~ "New South Wales",
str_detect(city, "ACT") ~ "Australian Capital Territory",
str_detect(city, "QLD") ~ "Queensland",
str_detect(city, "SA") ~ "South Australia",
str_detect(city, "Wide Bay Burnett") ~ "Queensland",
str_detect(city, "Sunshine Coast") ~ "Queensland",
str_detect(city, "Great Ocean Road") ~ "Victoria",
str_detect(city, "Mackay") ~ "Queensland",
str_detect(city, "Coalfields") ~ "New South Wales",
str_detect(city, "Murray") ~ "Victoria",
str_detect(city, "Maitland") ~ "New South Wales",
str_detect(city, "Hunter") ~ "New South Wales",
str_detect(city, "Gosford") ~ "New South Wales",
str_detect(city, "Pilbara") ~ "Western Australia",
str_detect(city, "Central Highlands") ~ "Queensland",
str_detect(city, "Blue Mountains") ~ "New South Wales",
str_detect(city, "Northern Australia") ~ "Northern Territory",
str_detect(city, "Illawarra") ~ "New South Wales",
str_detect(city, "South Coast") ~ "New South Wales",
str_detect(city, "Southern Tablelands") ~ "New South Wales",
str_detect(city, "Far North") ~ "Queensland",
str_detect(city, "Hawkesbury") ~ "New South Wales",
str_detect(city, "Darling Downs") ~ "Queensland",
str_detect(city, "Kimberley") ~ "Western Australia",
str_detect(city, "Peel") ~ "Western Australia",
str_detect(city, "La Trobe Valley") ~ "Victoria",
str_detect(city, "Somerset") ~ "Queensland",
str_detect(city, "Lockyer") ~ "Western Australia",
str_detect(city, "Goldfields") ~ "Western Australia",
str_detect(city, "Macedon Ranges") ~ "Victoria",
str_detect(city, "Mt Gambier") ~ "South Australia",
str_detect(city, "Limestone Coast") ~ "South Australia",
str_detect(city, "Wheatbelt") ~ "Western Australia",
str_detect(city, "Riverina") ~ "New South Wales",
str_detect(city, "Capricorn Coast") ~ "Queensland",
str_detect(city, "Gascoyne") ~ "Western Australia",
str_detect(city, "Mornington Peninsula") ~ "Victoria",
str_detect(city, "Bass Coast") ~ "Victoria",
str_detect(city, "Lismore") ~ "New South Wales",
str_detect(city, "Far North Coast") ~ "New South Wales",
str_detect(city, "Goulburn Valley") ~ "Victoria",
str_detect(city, "Yarra Valley") ~ "Victoria",
str_detect(city, "High Country") ~ "Victoria",
str_detect(city, "Eyre Peninsula") ~ "South Australia",
str_detect(city, "Bairnsdale") ~ "Victoria",
str_detect(city, "Gippsland") ~ "Victoria",
str_detect(city, "Mt Isa") ~ "Queensland",
str_detect(city, "North Coast") ~ "New South Wales",
str_detect(city, "Albury Wodonga") ~ "New South Wales",
str_detect(city, "Yorke Peninsula") ~ "South Australia",
str_detect(city, "Clare Valley") ~ "South Australia",
str_detect(city, "Fraser Coast") ~ "Queensland",
str_detect(city, "Great Southern") ~ "Western Australia",
str_detect(city, "Tamworth") ~ "New South Wales",
str_detect(city, "Southern Highlands") ~ "New South Wales",
str_detect(city, "Tablelands") ~ "Queensland",
str_detect(city, "Snowy") ~ "New South Wales",
str_detect(city, "Monaro") ~ "New South Wales",
str_detect(city, "West Gippsland") ~ "Victoria",
str_detect(city, "Latrobe Valley") ~ "Victoria",
str_detect(city, "Adelaide Hills") ~ "South Australia",
str_detect(city, "Barossa") ~ "South Australia",
str_detect(city, "Albury Area") ~ "New South Wales",
str_detect(city, "Grampians") ~ "Victoria",
str_detect(city, "Riverland") ~ "South Australia",
str_detect(city, "Murray Mallee") ~ "Victoria",
str_detect(city, "Fleurieu Peninsula") ~ "South Australia",
str_detect(city, "Kangaroo Island") ~ "South Australia",
str_detect(city, "Coober Pedy") ~ "South Australia",
str_detect(city, "Central West") ~ "New South Wales",
str_detect(city, "South West") ~ "South Australia",
str_detect(city, "North East") ~ "Tasmania",
str_detect(city, "North West") ~ "Tasmania",
str_detect(city, "Central Australia") ~ "Northern Territory",
str_detect(city, "Midwest") ~ "Western Australia",
str_detect(city, "Far West") ~ "New South Wales",
str_detect(city, "South East") ~ "Tasmania",
str_detect(city, "North East") ~ "Tasmania",
str_detect(city, "Central") ~ "Tasmania",
TRUE ~ as.character(state))
) %>%
filter(!city == "")
# Using the raw data to show missing values
miss_data <- by_city_cleaned %>%
# Replace blank values with NA
mutate_all(na_if,"")
vis_miss(miss_data)
gg_miss_upset(miss_data)
# Convert Date column from character to Date format for geom_line
by_city_cleaned <- by_city_cleaned %>%
mutate_at(vars(post_date), as.Date, format = "%Y-%m-%d")
by_city_cleaned %>%
group_by(post_date, state) %>%
summarise("count" = n()) %>%
ungroup() %>%
ggplot(aes(x = post_date,
y = count)) +
geom_line(color = "#00008B") +
facet_wrap(~ state, scales = "fixed") +
theme(axis.text.x = element_text(angle = 60, vjust = 0.3)) +
theme_bw() +
labs(title = "Count of jobs posted by days",
x = "Date",
y = "Number of jobs")
View(raw_data)
=======
jobcategory <- data_cleaned  %>% dplyr::select(post_date,
category) %>%
separate(post_date, c("Year","Month","day"))%>%
select(-"Year", -"day")
canum <- jobcategory %>%
count(category,sort = TRUE, name = "number")%>%
arrange(number)
kableExtra::kable(canum, caption = " The number of jobs per category  ") %>%
kable_styling(bootstrap_options = c("striped", "hover"))
distribution <- jobcategory  %>%
count(Month,category,sort = TRUE, name = "number")%>%
arrange(Month) %>%
ggplot(aes(x = Month, y = number)) +
geom_col(position = "dodge") +
facet_wrap(~category, ncol = 5)+
theme_bw(base_size = 6.5)+
theme(axis.text.x = element_text(angle = 50, vjust = 1)) +
ggtitle("Monthly job category distribution")
distribution
monthly <- jobcategory  %>%
count(category,Month,sort = TRUE, name = "number") %>%
arrange(Month) %>%
group_by(Month) %>%
top_n(5) %>%
ggplot() +
geom_point(mapping = aes(x = Month, y = number, color = category)) +
theme_bw(base_size = 11.5)+
theme(axis.text.x = element_text(angle = 50, vjust = 1))
monthly
monthly <- jobcategory  %>%
count(category,Month,sort = TRUE, name = "number") %>%
arrange(Month) %>%
group_by(Month) %>%
top_n(5) %>%
ggplot() +
geom_point(mapping = aes(x = Month, y = number, color = category)) +
ggtitle("Top 5 category in each month")
theme_bw(base_size = 11.5)+
theme(axis.text.x = element_text(angle = 50, vjust = 1))
monthly
monthly <- jobcategory  %>%
count(category,Month,sort = TRUE, name = "number") %>%
arrange(Month) %>%
group_by(Month) %>%
top_n(5) %>%
ggplot() +
geom_point(mapping = aes(x = Month, y = number, color = category)) +
ggtitle("Top 5 category in each month")+
theme_bw(base_size = 11.5)+
theme(axis.text.x = element_text(angle = 50, vjust = 1))
monthly
monthly <- jobcategory  %>%
count(category,Month,sort = TRUE, name = "number") %>%
arrange(Month) %>%
group_by(Month) %>%
top_n(5) %>%
ggplot() +
geom_point(mapping = aes(x = Month, y = number, color = category)) +
ggtitle("Top 5 category in each month")+
theme_bw(base_size = 11.5)+
theme(axis.text.x = element_text(angle = 50, vjust = 1))
monthly
knitr::opts_chunk$set(echo = FALSE,
cache=FALSE,
messages=FALSE,
warning=FALSE)
knitr::opts_chunk$set(echo = FALSE,
cache=FALSE,
messages=FALSE,
warning=FALSE)
library(ggplot2)
library(tidyverse)
library(haven)
library(lubridate)
library(broom)
library(tidyr)
library(base)
library(glue)
library(bookdown)
library(tinytex)
options(htmltools.dir.version = FALSE)
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(echo = FALSE,
cache=FALSE,
messages=FALSE,
warning=FALSE)
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(echo = FALSE,
cache=FALSE,
messages=FALSE,
warning=FALSE)
library(ggplot2)
library(tidyverse)
library(haven)
library(lubridate)
library(broom)
library(tidyr)
library(base)
library(glue)
library(bookdown)
library(tinytex)
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(echo = FALSE,
cache=FALSE,
messages=FALSE,
warning=FALSE)
options(htmltools.dir.version = FALSE)
knitr::opts_chunk$set(echo = FALSE,
cache=FALSE,
messages=FALSE,
warning=FALSE)
library(ggplot2)
library(tidyverse)
library(haven)
library(lubridate)
library(broom)
library(tidyr)
library(base)
library(glue)
library(bookdown)
library(tinytex)
>>>>>>> peimin_lin
